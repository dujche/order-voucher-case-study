version: '3.7'

services:

  php-order-api:
    build:
      dockerfile: Dockerfile.api
      context: .
      target: development
    volumes:
      - ./order:/var/www/html
    depends_on:
      - rabbitmq
    ports:
      - 8000:80

  php-voucher-event-listener:
    build:
      dockerfile: Dockerfile.event-listener
      context: .
      target: development
    volumes:
      - ./voucher:/usr/src/voucher
    depends_on:
      - rabbitmq
    restart: on-failure
    command: >
      sh -c "sleep 15 && ./laminas voucher:listen"

  php-voucher-api:
    build:
      dockerfile: Dockerfile.api
      context: .
      target: development
    volumes:
      - ./voucher:/var/www/html
    depends_on:
      - rabbitmq
    ports:
      - 8001:80

  mysql-real-order:
    image: mysql:5.6
    environment:
      MYSQL_ROOT_PASSWORD: GCECjdRLf7RvwJLJ
    volumes:
      - ./docker/db/order:/docker-entrypoint-initdb.d
      - real-order-data:/var/lib/mysql

  mysql-real-voucher:
    image: mysql:5.6
    environment:
      MYSQL_ROOT_PASSWORD: GCECjdRLf7RvwJLJ
    volumes:
      - ./docker/db/voucher:/docker-entrypoint-initdb.d
      - real-voucher-data:/var/lib/mysql

  phpmyadmin-real:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOSTS: mysql-real-order,mysql-real-voucher
      PMA_PASSWORD: GCECjdRLf7RvwJLJ
      PMA_USER: root
    ports:
      - "81:80"
    depends_on:
      - mysql-real-order
      - mysql-real-voucher

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
    volumes:
      - 'rabbitmq_data:/data'
      - ./docker/rabbitmq.conf:/etc/rabbitmq/rabbitmq.config
      - ./docker/rabbitmq_definitions.json:/opt/definitions.json

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  # zookeeper-2:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 32181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
      #- zookeeper-2
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181,zookeeper-2:2181
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
      #- zookeeper-2
    ports:
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 2
      #KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181,zookeeper-2:2181
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-3:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
      #- zookeeper-2
    ports:
      - 49092:49092
    environment:
      KAFKA_BROKER_ID: 3
      #KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181,zookeeper-2:2181
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://localhost:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
      - kafka-2
      - kafka-3
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092,kafka-2:9092,kafka-3:9092
      # KAFKA_CLUSTERS_1_ZOOKEEPER: zookeeper-2:2181
      # KAFKA_CLUSTERS_1_NAME: local-2
      # KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka:9092

  # kafdrop:
  #   image: obsidiandynamics/kafdrop
  #   restart: "no"
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: "kafka:9092"
  #   depends_on:
  #     - kafka
  #     - kafka-2
  #     - kafka-3

volumes:
  real-order-data:
#    external:
#      name: real-db-order
  real-voucher-data:
#    external:
#      name: real-db-voucher
  rabbitmq_data:
