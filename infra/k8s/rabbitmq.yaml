apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - image: rabbitmq:3-management
          name: rabbitmq
          ports:
            - containerPort: 15672
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: rabbitmq-data
            - name: config-volume
              mountPath: /opt/definitions.json
              subPath: definitions.json
            - name: config-volume-4
              mountPath: /etc/rabbitmq/rabbitmq.config
              subPath: rabbitmq.config
      restartPolicy: Always
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
        - name: config-volume
          configMap:
            name: rabbit-mq-config-defs
        - name: config-volume-4
          configMap:
            name: rabbit-mq-config
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: rabbitmq-management
  name: rabbitmq-management
spec:
  type: NodePort
  ports:
    - name: "15672"
      port: 15672
      targetPort: 15672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: rabbitmq-data
  name: rabbitmq-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbit-mq-config-defs
data:
  definitions.json: |
    {
      "users": [
        {
          "name": "admin",
          "password": "tNS#@xY&.v6FYAcb",
          "tags": "administrator"
        }
      ],
      "vhosts": [
        {
          "name": "/real/order"
        }
      ],
      "permissions": [
        {
          "user": "admin",
          "vhost": "/real/order",
          "configure": ".*",
          "write": ".*",
          "read": ".*"
        }
      ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbit-mq-config
data:
  rabbitmq.config: |
    [{rabbit,[{loopback_users, []}]},{rabbitmq_management, [{load_definitions, "/opt/definitions.json"}]}].



  